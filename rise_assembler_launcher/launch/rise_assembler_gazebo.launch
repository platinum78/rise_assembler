<?xml version="1.0"?>

<launch>
    <!-- these are the arguments you can pass this launch file, for example paused:=true -->
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>

    <!-- Remapping to meet ROS-Industrial conventions -->
    <remap from="/irb120_trajectory_controller/follow_joint_trajectory" to="/joint_trajectory_action" />
    <remap from="/irb120_trajectory_controller/state" to="/feedback_states" />
    <remap from="/irb120_trajectory_controller/command" to="/joint_path_command"/>

    <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <!-- <arg name="world_name" value="$(find gazebo_ros)/worlds/empty_.world" /> -->
        <arg name="debug" value="$(arg debug)" />
        <arg name="gui" value="$(arg gui)" />
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)" />
        <arg name="headless" value="$(arg headless)" />
        <arg name="verbose" value="true" />
    </include>

    <param name="robot_description" command="$(find xacro)/xacro.py '$(find rise_assembler_model)/urdf/rise_assembler.xacro'" />
    <include file="$(find rise_assembler_control)/launch/irb120_control.launch" />
    <node name="spawn_assembler" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model rise_assembler" output="screen" />

    <!-- Spawn controllers and joint_state_publisher's for ABB IRB 120 -->
    <!-- Gazebo already publishes joint states: disable joint_state_publisher temporarily. -->
    <node name="joint_states" pkg="joint_state_publisher" type="joint_state_publisher"/>
    <node name="gazebo_robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen" />

    <!-- Start the publisher for the left hand (the only hand) -->
    <!-- <include file="$(find rise_assembler_control)/launch/gripper_control.launch" /> -->
    <!-- <node name="joint_states" pkg="joint_state_publisher" type="joint_state_publisher" /> -->

</launch>
